{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","_ref","name","email","id","react_default","a","createElement","className","alt","src","concat","CardList","robots","map","user","i","components_Card","key","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSearchChange","event","setState","target","value","state","_this2","fetch","then","response","json","users","_this3","filteredRobots","filter","robot","toLowerCase","includes","components_SearchBox","components_Scroll","components_CardList","Component","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_containers_App"],"mappings":"yNAceA,EAZF,SAAAC,GAAwB,IAArBC,EAAqBD,EAArBC,KAAMC,EAAeF,EAAfE,MAAOC,EAAQH,EAARG,GACzB,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uDACXH,EAAAC,EAAAC,cAAA,OAAKE,IAAI,OAAOC,IAAG,wBAAAC,OAA0BP,EAA1B,mBACvBC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,cAAML,GACNG,EAAAC,EAAAC,cAAA,aAAKJ,MCcFS,EAnBE,SAAAX,GAAc,IAAZY,EAAYZ,EAAZY,OACf,OACIR,EAAAC,EAAAC,cAAA,WAEQM,EAAOC,IAAI,SAACC,EAAMC,GACtB,OACIX,EAAAC,EAAAC,cAACU,EAAD,CACIC,IAAOF,EACPZ,GAAIS,EAAOG,GAAGZ,GACdF,KAAQW,EAAOG,GAAGd,KAClBC,MAASU,EAAOG,GAAGb,YCGxBgB,EAdG,SAAAlB,GAAmCA,EAAhCmB,YAAgC,IAAnBC,EAAmBpB,EAAnBoB,aAE9B,OACIhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACfH,EAAAC,EAAAC,cAAA,SACIC,UAAU,mCACVc,KAAK,SACLC,YAAY,gBACZC,SAAUH,MCCPI,EATA,SAACC,GACZ,OACIrB,EAAAC,EAAAC,cAAA,OAAKoB,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,UAChEJ,EAAMK,WCuCJC,qBApCX,SAAAA,IAAe,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACXC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAcJI,eAAiB,SAACC,GACdR,EAAKS,SAAS,CAAEtB,YAAaqB,EAAME,OAAOC,SAd1CX,EAAKY,MAAQ,CACNhC,OAAQ,GACPO,YAAa,KAJVa,mFAQI,IAAAa,EAAAV,KACfW,MAAM,8CACDC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GAAK,OAAIL,EAAKJ,SAAS,CAAE7B,OAAQsC,uCAQtC,IAAAC,EAAAhB,KACKiB,EAAiBjB,KAAKS,MAAMhC,OAAOyC,OAAO,SAAAC,GAC5C,OAAOA,EAAMrD,KAAKsD,cAAcC,SAASL,EAAKP,MAAMzB,YAAYoC,iBAEvE,OACDnD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MACfH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,MAAd,eACAH,EAAAC,EAAAC,cAACmD,EAAD,CAAWrC,aAAce,KAAKI,iBAC9BnC,EAAAC,EAAAC,cAACoD,EAAD,KACItD,EAAAC,EAAAC,cAACqD,EAAD,CAAU/C,OAAUwC,aA7BdQ,cCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAlB,KAAAiB,EAAAE,KAAA,UAAqBnB,KAAK,SAAA/C,GAAiD,IAA9CmE,EAA8CnE,EAA9CmE,OAAQC,EAAsCpE,EAAtCoE,OAAQC,EAA8BrE,EAA9BqE,OAAQC,EAAsBtE,EAAtBsE,OAAQC,EAAcvE,EAAduE,QAC3DJ,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,YCCDU,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHxE,EAAAC,EAAAC,cAACF,EAAAC,EAAMwE,WAAP,KACEzE,EAAAC,EAAAC,cAACwE,EAAD,QAOJjB","file":"static/js/main.d60fdf9c.chunk.js","sourcesContent":["import React  from \"react\";\r\n\r\nconst Card = ({ name, email, id}) => {\r\n    return(\r\n        <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n            <img alt=\"robo\" src={`https://robohash.org/${id}?size=200x200`} />\r\n        <div>\r\n            <h2> {name}</h2>\r\n            <p> {email}</p>\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from \"react\";\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) => {\r\n    return(\r\n        <div>\r\n        {\r\n                robots.map((user, i) => {\r\n            return (\r\n                <Card \r\n                    key = {i} \r\n                    id={robots[i].id} \r\n                    name = {robots[i].name} \r\n                    email = {robots[i].email}\r\n                    />\r\n            );\r\n        })\r\n        }\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from \"react\";\r\n\r\nconst SearchBox = ({ searchfield, searchChange }) => {\r\n\r\n    return (\r\n        <div className=\"pa2\">\r\n        <input\r\n            className='pa3 ba b--green bg-lightest-blue' \r\n            type='search' \r\n            placeholder='search robots'\r\n            onChange={searchChange} \r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from \"react\";\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{overflowY: 'scroll', border: '1px solid black', height: '500px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default Scroll","import React, {Component} from \"react\";\r\nimport CardList from \"../components/CardList\";\r\nimport SearchBox from \"../components/SearchBox\";\r\nimport Scroll from '../components/Scroll';\r\nimport './App.css';\r\n\r\n\r\nclass App extends Component  {\r\n    constructor () {\r\n        super()\r\n        this.state = {\r\n               robots: [],\r\n                searchfield: ' '\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response => response.json())\r\n            .then(users => this.setState({ robots: users}));\r\n        \r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({ searchfield: event.target.value })\r\n    }\r\n\r\n    render() {\r\n            const filteredRobots = this.state.robots.filter(robot =>{\r\n                return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n        })\r\n         return(\r\n        <div className='tc'>\r\n        <h1 className=\"f1\">RoboFriends</h1>\r\n        <SearchBox searchChange={this.onSearchChange}/>\r\n        <Scroll>\r\n            <CardList robots = {filteredRobots} />\r\n        </Scroll>\r\n        </div>\r\n    );\r\n    }\r\n   \r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './containers/App'\nimport reportWebVitals from './reportWebVitals';\nimport \"tachyons\";\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}